import socket
import threading


mysock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

mysock.bind(('127.0.0.1', 65535))

mysock.listen(1)

conns = []

def handler(c, a):
    global conns
    i = 0
    try:
        while True:
            data = c.recv(1500)
            print ("request " + str(i) + " data : " + data.hex())
            if (i == 0):
                # case success (id --> useless)
                c.send(bytes.fromhex("3c3f786d6c2076657273696f6e3d27312e30273f3e3c73747265616d3a73747265616d20786d6c6e733d276a61626265723a636c69656e742720786d6c6e733a73747265616d3d27687474703a2f2f6574686572782e6a61626265722e6f72672f73747265616d73272066726f6d3d276a61626265722e6f7267272069643d2738306661616561386233656337313036272076657273696f6e3d27312e30273e3c73747265616d3a66656174757265733e3c7374617274746c7320786d6c6e733d2775726e3a696574663a706172616d733a786d6c3a6e733a786d70702d746c73272f3e3c6d656368616e69736d7320786d6c6e733d2775726e3a696574663a706172616d733a786d6c3a6e733a786d70702d7361736c273e3c6d656368616e69736d3e534352414d2d5348412d313c2f6d656368616e69736d3e3c2f6d656368616e69736d733e3c636f6d7072657373696f6e20786d6c6e733d27687474703a2f2f6a61626265722e6f72672f66656174757265732f636f6d7072657373273e3c6d6574686f643e7a6c69623c2f6d6574686f643e3c2f636f6d7072657373696f6e3e3c76657220786d6c6e733d2775726e3a786d70703a66656174757265733a726f73746572766572273e3c6f7074696f6e616c2f3e3c2f7665723e3c2f73747265616d3a66656174757265733e"))
                # case failure (TODO Remove me ?)
                #c.send(bytes.fromhex("3c3f786d6c2076657273696f6e3d27312e30273f3e3c73747265616d3a73747265616d20786d6c6e733d276a61626265723a636c69656e742720786d6c6e733a73747265616d3d27687474703a2f2f6574686572782e6a61626265722e6f72672f73747265616d73272066726f6d3d276a61626265722e6f7267272069643d2737646135646266373766396537623561272076657273696f6e3d27312e30273e3c73747265616d3a66656174757265733e3c7374617274746c7320786d6c6e733d2775726e3a696574663a706172616d733a786d6c3a6e733a786d70702d746c73272f3e3c6d656368616e69736d7320786d6c6e733d2775726e3a696574663a706172616d733a786d6c3a6e733a786d70702d7361736c273e3c6d656368616e69736d3e534352414d2d5348412d313c2f6d656368616e69736d3e3c2f6d656368616e69736d733e3c636f6d7072657373696f6e20786d6c6e733d27687474703a2f2f6a61626265722e6f72672f66656174757265732f636f6d7072657373273e3c6d6574686f643e7a6c69623c2f6d6574686f643e3c2f636f6d7072657373696f6e3e3c76657220786d6c6e733d2775726e3a786d70703a66656174757265733a726f73746572766572273e3c6f7074696f6e616c2f3e3c2f7665723e3c2f73747265616d3a66656174757265733e"))
            if (i == 1):
                c.send(bytes.fromhex("3c6368616c6c656e676520786d6c6e733d2775726e3a696574663a706172616d733a786d6c3a6e733a786d70702d7361736c273e3c2f6368616c6c656e67653e"))
            if (i == 2):
                # if wrong password
                #if (data.hex() == "3c726573706f6e736520786d6c6e733d2775726e3a696574663a706172616d733a786d6c3a6e733a786d70702d7361736c273e62697773626a3172623231685833526c63335173636a316f6557527959513d3d3c2f726573706f6e73653e"):
                #   c.send(bytes.fromhex("3c6368616c6c656e676520786d6c6e733d2775726e3a696574663a706172616d733a786d6c3a6e733a786d70702d7361736c273e636a316f6557527959545250616d3947516b6447536e6c36564746435630747052325a316355354e4b335935636b52424d4864754c484d3963576470536b6c4b55584e525547683251573930536c6457546b6851555430394c476b394e4441354e673d3d3c2f6368616c6c656e67653e"))
                #else:
                c.send(bytes.fromhex("3c6368616c6c656e676520786d6c6e733d2775726e3a696574663a706172616d733a786d6c3a6e733a786d70702d7361736c273e636a316f6557527959555a6c4d30457863324e4d4e304d77616e524c6332307261324e6e4f545a4e563263334e6a6c4764564a314c484d396130303262465271616d3561567a52474f46644d596d39355957646a515430394c476b394e4441354e673d3d3c2f6368616c6c656e67653e"))
            if (i == 3):
                # if good password was used
                if (data.hex() == "3c726573706f6e736520786d6c6e733d2775726e3a696574663a706172616d733a786d6c3a6e733a786d70702d7361736c273e597a31696158647a4c48493961486c6b636d46475a544e424d584e6a544464444d47703053334e744b32746a5a7a6b325456646e4e7a5935526e5653645378775057316156544a525a57746b4f4570534e336c69513352694d326875536b314852575a4a5a7a303d3c2f726573706f6e73653e"):
                    c.send(bytes.fromhex("3c7375636365737320786d6c6e733d2775726e3a696574663a706172616d733a786d6c3a6e733a786d70702d7361736c273e646a315a5557786c5a335a6952586445627a4a764e6a425a615573796155467257586c51533055393c2f737563636573733e"))
                    print ("Found !!! -> Hydra !")
                elif (data.hex() == "3c726573706f6e736520786d6c6e733d2775726e3a696574663a706172616d733a786d6c3a6e733a786d70702d7361736c273e597a31696158647a4c48493961486c6b636d453054327076526b4a48526b7035656c5268516c644c6155646d6458464f545374324f584a45515442336269787750574675646e6853556e593355315a4c5358643363306f7a575459764d47684c517a425a5654303d3c2f726573706f6e73653e"):
                    c.send(bytes.fromhex("3c7375636365737320786d6c6e733d2775726e3a696574663a706172616d733a786d6c3a6e733a786d70702d7361736c273e646a315a5557786c5a335a6952586445627a4a764e6a425a615573796155467257586c51533055393c2f737563636573733e"))
                else:
                    c.send(bytes.fromhex("3c6661696c75726520786d6c6e733d2775726e3a696574663a706172616d733a786d6c3a6e733a786d70702d7361736c273e3c696e76616c69642d617574687a69642f3e3c2f6661696c7572653e"))
                print (data)
            i = (i + 1) % 4
            if not data:
                conns.remove(c)
                c.close()
                break
    except:
        c.close()
            
while True:
    c, a = mysock.accept()
    cThread = threading.Thread(target=handler, args=(c,a))
    cThread.daemon = True
    cThread.start()
    conns.append(c)
